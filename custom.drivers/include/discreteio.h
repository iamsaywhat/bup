/*********************************************************************************************************

    discreteio - Модуль дискретного управления/контроля периферии
							
*********************************************************************************************************/
#ifndef _DISCRETE_IO_H_
#define _DISCRETE_IO_H_

#include "bupboard.h"
#include "otherlib.h"


// Макросы для именованного контроля состояний
#define PIN1_CHECK           Pin_read (PIN1)           /* Воткнута ли шпилька 1                        (Воткнута = 1)      */
#define BLIND_CHECK          Pin_read (BLIND)          /* Открыт ли замок створки ли шпилька 1         (Закрыт = 0)        */
#define PIN2_DIR_CHECK       Pin_read (PIN2_DIR)       /* Воткнута ли шпилька 2                        (Воткнута = 1)      */
#define PIN2_INV_CHECK       Pin_read (PIN2_INV)       /* Не воткнута ли шпилька 2                     (Воткнута = 0)      */
#define CONNECT_ZPZ_CHECK    Pin_read (CONNECT_ZPZ)    /* Подключен ли ЗПЗ к разъему                   (Подключён = 0)     */
#define LED_READY_CHECK      Pin_read (LED_READY)      /* Состояние индикатора "Готов"                 (Вкл = 1, Выкл = 0) */
#define LED_FAULT_CHECK      Pin_read (LED_FAULT)      /* Состояние индикатора "Неисправность"         (Вкл = 1, Выкл = 0) */
#define RELAY_BIM_CHECK      Pin_read (RELAY_BIM)      /* Состояние реле питания БИМ                   (Вкл = 1, Выкл = 0) */
#define PYRO_CHECK           Pin_read (PYRO)           /* Состояние реле пирозамка планера             (Вкл = 1, Выкл = 0) */
#define TOUCHDOWN_PYRO_CHECK Pin_read (TOUCHDOWN_PYRO) /* Состояние реле пирозамка посадочной системы  (Вкл = 1, Выкл = 0) */

// Макросы для именованного управления пинами
#define LED_READY_ON()       Pin_set(LED_READY)        /* Зажечь светодиод "ГОТОВ" */
#define LED_READY_OFF()      Pin_reset(LED_READY)      /* Погасить светодиод "ГОТОВ" */
#define LED_FAULT_ON()       Pin_set(LED_FAULT)        /* Зажечь светодиод "НЕИСПРАВНОСТЬ" */
#define LED_FAULT_OFF()      Pin_reset(LED_FAULT)      /* Погасить светодиод "НЕИСПРАВНОСТЬ" */
#define PYRO_ON()            Pin_set(PYRO)             /* Подрыв пирозамка планера */
#define PYRO_OFF()           Pin_reset(PYRO)           /* Снять напряжение с зажигателя пирозамка планера */
#define TOUCHDOWN_PYRO_ON()  Pin_set(TOUCHDOWN_PYRO)   /* Подрыв пирозамка посадочной системы */
#define TOUCHDOWN_PYRO_OFF() Pin_reset(TOUCHDOWN_PYRO) /* Снять напряжение с зажигателя пирозамка посадочной системы */


/**************************************************************************************************************
  Discrete_initialize - Конфигурирование дискретных пинов
**************************************************************************************************************/
void Discrete_initialize (void);

/**************************************************************************************************************
  runIndication - Запуск мигающей индикации
  Параметры:
            pin    - пин с конфигурацией;
            period - период следования импульсов
**************************************************************************************************************/
void runIndication(PinConfigType* pin, unsigned long period);

/**************************************************************************************************************
  stopIndication - Остановка мигающей индикации
**************************************************************************************************************/
void stopIndication(void);

/**************************************************************************************************************
  interruptIndication - Функция обслуживания прерываний от используемого таймера.
  Примечание: 
             Необходимо разместить в базовом обработчике прерывания
**************************************************************************************************************/
void interruptIndication(void);



#endif
