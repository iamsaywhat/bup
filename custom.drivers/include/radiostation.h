/*****************************************************************************************************
  radiostation - Драйвер работы с радиостанцией Р-187-П1.

  Портативная радиостанция от "Ангстрем". Предоставляет для обмена информацией интерфейс RS-485;
  В составе САУ предполается использовать для изменения коодинат точки приземления находясь в полете,
  путем отправки SDS сообщения с земли.
	
  Данный программный модуль позволяет проверить соостояние связи и коректность (валидность) ответов, 
  запрашивать количество SDS сообщений, их список, их текст, а так же удалять их с радиостанции.
  
  Настройки UART:
    Скорость передачи 9600 Бод;
    8 бит данных, 
    1 стоповый бит, 
    Без контроля четности. 
    (115200, 8-N-1)
		
  Примечания:	
    1) Тип обмена информацией с СНС - двунаправленный запрос/ответ;				 
    2) Контрольная сумма: CRC16, маска 0х1021, начальное значение 0xFFFF; 			 
    3) Поток данных разделяется на кадры (подобие SLIP протокола).
    Каждый кадр начинается символом FEND (0xC0). 
					
      Исходный пакет        Отправляем как
      |ПАКЕТ|     ->        |FEND||ПАКЕТ|
					 
      Если FEND (0xC0) содержится в данных  пакета, он посылается внутри кадра как FESC TFEND (0xDB 0xDC). 
					 
      Исходный пакет                      Отправляем как
      |ПАКЕТ.....C0.....ПАКЕТ|   ->   |FEND||ПАКЕТ.....[FESC,TFEND].....ПАКЕТ|
					 
      Если FESC (0xDB) содержится в данных пакета, он посылается внутри кадра как FESC TFESC (0xDB 0xDD). 
					 
      Исходный пакет                      Отправляем как
      |ПАКЕТ.....DB.....ПАКЕТ|   ->   |FEND||ПАКЕТ.....[FESC,TFESC].....ПАКЕТ|
					 
    Символ FESC с любым символом, за исключением TFEND или TFESC, является ошибкой. 
    Символы TFEND и TFESC являются
    обычными символами, если им не предшествует FESC. 
					 
    4) Данные в протоколе передаются старщим байтом вперед (big-endian)
    5) Есть возможность использовать пользовательскую скорость обмена, но важно помнить, что
    стартует радиостанция с 9600 бодрейта, а в отсутствии обмена в течение 2-3 секунд
    сбрасывает настройки по-умолчанию
			 
			 
  Описание модуля:
	
    Для того, чтобы не переживать за уникальные имена функций модуля,
    свёл их в единую структуру Radiostation.
    (!) Доступ через Radiostation.<name>(args);
	
************************************************************************************
  sendEmpty - Запрос-пустышка
  Возвращает:
            Результат выполнения
  Примечание: Может использоваться для проверки связи с рацией,
	          или для удержания радиостанции в режиме rs485 (см РЭ на радиостанцию)
************************************************************************************
  сheckDeviceName - Проверка имени устройства
  Возвращает:
            Результат выполнения
************************************************************************************
  checkManufacturerName - Проверка имени производителя
  Возвращает:
            Результат выполнения
************************************************************************************
  updateSdsList - Обновить список SDS сообщений
  Возвращает:
            Результат выполнения
************************************************************************************
  getCoordinatesFromSds - Поиск координат в SDS сообщении с идентификатором idSds;
  Параметры:
            idSds - Идентификатор SDS сообщения
						latitude - Указатель на переменную широта для сохранения
						longitude - Указатель на переменную долгота для сохранения
  Возвращает:
            Результат выполнения
						Долготу, широту через указатель, если были найдены
************************************************************************************
  deleteSds - Стереть SDS сообщение с идентификатором idSds
  Параметры:
            idSds - Идентификатор SDS сообщения
  Возвращает:
            Результат выполнения
************************************************************************************
  setBaudrate - Установить скорость интерфейса
  Параметры:
            baudrate - Скорость в бодах (9600, 115200, 230400, 460800);
  Возвращает:
            Результат выполнения
************************************************************************************
  deleteAllSds - Стереть все имеющиеся SDS сообщения
  Возвращает:
            Результат выполнения
************************************************************************************						
  findCoordinateInSdsList - Поиск среди SDS сообщений закодированных координат
  Возвращает:
            Результат выполнения
  Примечание:
            Ищет в списке сообщений, то которое содержит координаты, и извлекает их,
						остальные удаляёт, как и то, из которого только что были извлечены координаты
**************************************************************************************************************
  autoChecker - Автомат самостоятельно проверяющий новые сообщение и текст в нём на предмет координат
  Параметры: 
            latitude - Широта (то, куда запишется результат в случае его наличия)
            longitude - Долгота (то, куда запишется результат в случае его наличия)
  Возвращает:
            Результат выполнения
  Примечание:
            За один вызов совершает один элементарный запрос, дял работы требуется запускать циклически
*************************************************************************************************************/
#ifndef _RADIOSTATION_H_
#define _RADIOSTATION_H_

#include <stdint.h>

/************************************************************
  Аппаратнозависимая конфигурация
************************************************************/
#define RADIO_DEFAULT_BAUDRATE    9600          // Бит/с скорость обмена с СНС
#define RADIO_BYTE_TIMEOUT        2             // Величина таймаута на приём байта, мс
#define RADIO_FIFO_TIMEOUT        16            // Величина таймаута на очистку FIFO, мс
#define RADIO_RECEIVE_TIMEOUT     10            // Величина таймаута на прием пакета, мс
#define RADIO_TRANSACTION_TIMEOUT 130           // Максимальное время на запрос + ответ к радиостанции
#define RADIO_SEND_PAUSE          1             // Пауза между любыми запросами к радиостанции, мс

#define PACKET_SIZE_LIMIT         100           // Ограничение на размер принимаемых пакетов, байт
#define RADIO_ADDRESS             0x01          // Адрес (id) радиостанции

/*****************
  Коды ошибок
******************/
typedef enum{
  RADIO_WRONG_CRC,               // Ошибка в контрольной сумме
  RADIO_WRONG_INDEX,             // Индекс кадра запроса и ответа не совпали
  RADIO_TIMEOUT,                 // Таймаут
  RADIO_SUCCESS,                 // Без ошибок/Положительный результат
  RADIO_FAILED,                  // Ошибка/Отрицательный результат
  RADIO_WRONG_ADDRESS,           // Адрес радиостанции не опознан
  RADIO_EXCESS_PACKET_SIZE,      // Превышен размер входящего пакета
  RADIO_COORDINATES_NOT_FOUND,   // В сообщении не найдены координаты
  RADIO_BLOCKED,                 // Обращения к радиостанции программно заблокированы
}RadioStatus;

typedef enum{
  RADIO_UPDATE_SUCCESS,
  RADIO_UPDATE_FAILED,
  RADIO_GOT_NEW_COORDINATES,
  RADIO_NO_COORDINATES,
  RADIO_DELETE_SUCCESS,
  RADIO_DELETE_FAILED,
  RADIO_BLOCKED_BY_TIMEOUT,
}RadioAutoParserStatus;

typedef struct{
  RadioStatus           (*setBaudrate) (uint32_t baudrate);
  uint32_t              (*currentBaudrate)(void);
  uint8_t               (*getSdsCount) (void);
  RadioStatus           (*sendEmpty)(void);
  RadioStatus           (*checkDeviceName)(void);
  RadioStatus           (*checkManufacturerName)(void);
  RadioStatus           (*updateSdsList)(void);
  RadioStatus           (*getCoordinatesFromSds)(int idSds, double *latitude, double *longitude);
  RadioStatus           (*deleteSds)(uint8_t idSds);
  RadioStatus           (*deleteAllSds) (void);
  RadioStatus           (*findCoordinateInSdsList)(double *latitude, double *longitude);
  RadioAutoParserStatus (*autoChecker)(double *latitude, double *longitude);
}Radiostation_module;

extern Radiostation_module Radiostation;

#endif
