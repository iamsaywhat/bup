/************************************************************************************

       SelfTesting - Модуль самодиагностики БУП.
			 
			 Состав модуля:
			 SelfTesting_1636PP52Y  - Тестирование 4х внешних SPI-flash от Миландра
			 SelfTesting_25Q64FV    - Тестирование SPI-flash от WINBOND
			 SelfTesting_MapNtask   - Проверка наличия карты рельефа и полетного задания
			 SelfTesting_LogFs      - Проверка готовности файловой системы
			 SelfTesting_LEFT_BIM   - Проверка исправности левого БИМа
			 SelfTesting_RIGHT_BIM  - Проверка исправности правого БИМа
			 SelfTesting_PIN1       - Проверка состояния шпильки 1
			 SelfTesting_PIN2       - Проверка состояния шпильки 2
			 SelfTesting_PYRO       - Проверка состояния реле пиропатрона
			 SelfTesting_BLIND      - Проверка состояния реле створки
			 SelfTesting_SNS        - Проверка связи с СНС
			 SelfTesting_SWS        - Проверка связи с СВС
			 
			 Разбитовка SystemState:
			    0 бит - Map (Состояние карты и полетного задания)
			    1 бит - _1636PP52Y (Состояние внешней SPI памяти 1636PP52Y от Миландр)
			    2 бит - _25Q64FV (Состояние внешней SPI памяти 25Q64FV от Windbond)
			    3 бит - LogFS (Состояние файловой системы)
          4 бит - Left_BIM (Состояние левого БИМа)
          5 бит - Right_BIM (Состояние правого БИМа)
          6 бит - PIN1 (Состояние шпильки 1)
          7 бит - PIN2 (Состояние шпильки 2)
          8 бит - PYRO (Состояние реле пиропатрона)
          9 бит - BLIND (Состояние створки)
          10 бит - SNS (Состояние СНС)
          11 бит - SWS (Состояние СВС)
					12 бит - Доступность карты рельефа
					
			 Использование:
			     Состояние того или иного устройства модуля можно узнать с помощью
					    SelfTesting_STATUS(x);
					 Принудительная установка состояния в ИСПРАВЕН
					    SelfTesting_SET_OK(x);
			     Принудительная установка состояния в НЕИСПРАВЕН
					    SelfTesting_RESET_OK(x);
					 где x - идентификатор устройства/модуля из перечня:
              ST_MAP         - Карта и полётное задание
              ST_1636PP52Y   - Внешняя SPI память от Миландр              
              ST_25Q64FV     - Внешняя SPI память от Winbond            
              ST_LogFS       - Файловая система логирования               
              ST_Left_BIM    - Левый БИМ            
              ST_Right_BIM   - Правый БИМ            
              ST_pin1        - Шпилька 1         (ST_OK/ST_FAULT  = Воткнута/Извлечена)
              ST_pin2        - Шпилька 2         (ST_OK/ST_FAULT  = Воткнута/Извлечена)
              ST_pyro        - Реле пиропатрона  (ST_OK/ST_FAULT  = Включено/Выключено)
              ST_blind       - Реле створки      (ST_OK/ST_FAULT  = Включено/Выключено) 
              ST_sns         - СНС
              ST_sws         - СВС  				
		 
************************************************************************************/

#ifndef _SELF_TESTING_H_
#define _SELF_TESTING_H_

#include <stdint.h>


/***************************************
      Состояние системы
***************************************/
extern uint16_t SystemState;


/***************************************
      Результат тестирования
***************************************/
typedef enum {
	ST_OK = 1,
	ST_FAULT = 0,
} SelfTesing_STATUS;


/*************************************************************************
      Макросы изменения и проверки состояния системы
*************************************************************************/
#define ST_MAP                     (0)
#define ST_1636PP52Y               (1)  
#define ST_25Q64FV                 (2)
#define ST_LogFS                   (3)
#define ST_Left_BIM                (4)
#define ST_Right_BIM               (5)
#define ST_pin1                    (6)
#define ST_pin2                    (7)
#define ST_pyro                    (8)
#define ST_blind                   (9)
#define ST_sns                     (10)
#define ST_sws                     (11)
#define ST_MapAvailability         (12)
#define SelfTesting_SET_OK(x)      (SystemState|=(1<<x))          // Результат проверки - ОК
#define SelfTesting_SET_FAULT(x)   (SystemState&=~(1<<x))         // Результат проверки - FAULT
#define SelfTesting_STATUS(x)      ((SystemState&(1<<x))>>(x))    // Узнать состояние


/************************************************************************************
				SelfTestingFull - Тестирование всей периферии и програмных модулей
				
				Примечание: Запускает все ниже описанные функции
************************************************************************************/
void SelfTestingFull (void);


/************************************************************************************
       SelfTestingOnline - Оперативная проверка состояния системы

       Примечание: должна периодически запускаться, например, по таймеру  
************************************************************************************/
void SelfTestingOnline (void);


/************************************************************************************
       SelfTesting_SysState2CAN - Вывод состояния системы в CAN 
************************************************************************************/
void SelfTesting_SysState2CAN(void);	
	
	
/************************************************************************************
				SelfTesting_1636PP52Y - Тестирование 4х внешних SPI-flash от Миландра
				
				Возвращает: ST_OK    - Если память работает
				            ST_FAULT - Если память недоступна
************************************************************************************/
SelfTesing_STATUS SelfTesting_1636PP52Y(void);


/************************************************************************************
				SelfTesting_25Q64FV - Тестирование SPI-flash от WINBOND
				
				Возвращает: ST_OK    - Если память работает
				            ST_FAULT - Если память недоступна
************************************************************************************/
SelfTesing_STATUS SelfTesting_25Q64FV(void);


/************************************************************************************
        SelfTesting_MapNtask - Проверка наличия карты рельефа и полетного задания
				
				Возвращает: ST_OK    - Если задание и карта загружены
				            ST_FAULT - Если карта и задание отсутствует или повреждены
************************************************************************************/
SelfTesing_STATUS SelfTesting_MapNtask(void);


/************************************************************************************
        SelfTesting_LogFs - Проверка готовности файловой системы
				
				Возвращает: ST_OK    - Если файловая система исправна
				            ST_FAULT - Если форматирование повреждено
************************************************************************************/
SelfTesing_STATUS SelfTesting_LogFs(void);


/************************************************************************************
        SelfTesting_LEFT_BIM - Проверка исправности левого БИМа
				
				Возвращает: ST_OK    - Если БИМ исправен
				            ST_FAULT - Если БИМ неисправен, либо связь отсутствует
************************************************************************************/
SelfTesing_STATUS SelfTesting_LEFT_BIM(void);


/************************************************************************************
        SelfTesting_RIGHT_BIM - Проверка исправности правого БИМа
				
				Возвращает: ST_OK    - Если БИМ исправен
				            ST_FAULT - Если БИМ неисправен, либо связь отсутствует
************************************************************************************/
SelfTesing_STATUS SelfTesting_RIGHT_BIM(void);


/************************************************************************************
				SelfTesting_PIN1 - Проверка состояния шпильки 1
				
				Возвращает: ST_OK    - Если шпилька 1 вставлена
				            ST_FAULT - Если шпилька 1 отсутствует
************************************************************************************/
SelfTesing_STATUS SelfTesting_PIN1(void);


/************************************************************************************
				SelfTesting_PIN2 - Проверка состояния шпильки 2
				
				Возвращает: ST_OK    - Если шпилька 2 вставлена
				            ST_FAULT - Если шпилька 2 отсутствует
************************************************************************************/
SelfTesing_STATUS SelfTesting_PIN2(void);


/************************************************************************************
				SelfTesting_PYRO - Проверка состояния реле пиропатрона
				
				Возвращает: ST_OK    - Если реле пиропатрона включено
				            ST_FAULT - Если реле пиропатрона выключено
************************************************************************************/
SelfTesing_STATUS SelfTesting_PYRO(void);


/************************************************************************************
        SelfTesting_BLIND - Проверка состояния реле створки
				
				Возвращает: ST_OK    - Если реле створки включено
				            ST_FAULT - Если реле створки выключено
************************************************************************************/
SelfTesing_STATUS SelfTesting_BLIND(void);


/************************************************************************************
        SelfTesting_SNS - Проверка связи с СНС
				
				Возвращает: ST_OK    - Если связь с СНС есть
				            ST_FAULT - Если связь с СНС отсутствует
************************************************************************************/
SelfTesing_STATUS SelfTesting_SNS(void);


/************************************************************************************
        SelfTesting_SWS - Проверка связи с СВС
				
				Возвращает: ST_OK    - Если связь с СВС есть
				            ST_FAULT - Если связь с СВС отсутствует
************************************************************************************/
SelfTesing_STATUS SelfTesting_SWS(void);


#endif

