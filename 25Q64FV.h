#ifndef _25Q64FV_H_
#define _25Q64FV_H_
	
	
#include "stdint.h"

	
#define SPI_25Q64FV_Module                 MDR_SSP2
#define RST_CLK_PCLK_SPI_25Q64FV_Port      RST_CLK_PCLK_PORTF
#define RST_CLK_PCLK_SPI_25Q64FV_Module    RST_CLK_PCLK_SSP2

// ChipSelect n - выбор микросхемы № n
#define SPI_25Q64FV_CSn                    PORT_Pin_11 			// ChipSelect - выбор микросхемы
#define SPI_25Q64FV_CSn_PORT               MDR_PORTF            // Используем порт F под CS
#define SPI_25Q64FV_CSn_FUNC               PORT_FUNC_PORT		// Функция пинов - просто порт (выход)

// SCLK - последовательный тактовый сигнал шины SPI
#define SPI_25Q64FV_CLK                    PORT_Pin_13					
#define SPI_25Q64FV_CLK_PORT               MDR_PORTF			// Используем порт F
#define SPI_25Q64FV_CLK_FUNC               PORT_FUNC_OVERRID	// Функция пинов - переопр: SSP2_CLK

// MISO - вход для мастера, выход для ведомого
#define SPI_25Q64FV_RXD                    PORT_Pin_14	
#define SPI_25Q64FV_RXD_PORT               MDR_PORTF            // Используем порт F
#define SPI_25Q64FV_RXD_FUNC               PORT_FUNC_OVERRID    // Функция пинов - переопр: SSP2_RXD


// MOSI - выход для мастера, вход для ведомого
#define SPI_25Q64FV_TXD                    PORT_Pin_15					
#define SPI_25Q64FV_TXD_PORT               MDR_PORTF            // Используем порт F
#define SPI_25Q64FV_TXD_FUNC               PORT_FUNC_OVERRID    // Функция пинов - переопр: SSP2_ЕXD

// Параметры микросхемы
#define _25Q64FV_SECTORS_NUM               2048                 // Количество секторов 
#define _25Q64FV_SECTORS_SIZE              0x1000               // Размер сектора

// ID микросхемы и производителя
#define _25Q64FV_ID                        0xEF16 

// Таймаут на чтение по SPI
#define TIMEOUT_25Q64FV                    0xFF

// Тайминги при выполнении операций
#define _25Q64FV_ChipErase_delay_us   25000000           // Время стирания всего чипа (от 20с до 100 с)
#define _25Q64FV_SectorErase_delay_us 60000              // Время стирания сектора (от 45 мс до 400 мс)
#define _25Q64FV_ProgramByte_delay_us 50                 // Время записи одного байта сектора (от 20мкс до 50мкс)

// Список поддерживаемых команд для 25Q64FV
enum _25Q64FV_CMD
{
	_25Q64FV_CMD_WriteEnable          = 0x06,      // Разрешение записи в файл
	_25Q64FV_CMD_WriteDisable         = 0x04,      // Запрет записи в память
	_25Q64FV_CMD_PageProgram          = 0x02,      // Программирование страницы
	_25Q64FV_CMD_SectorErase          = 0x20,      // Очистка сектора (размером 4 Кб)
	_25Q64FV_CMD_BlockErase32k        = 0x52,      // Очистить блок разрмером 32Кб
	_25Q64FV_CMD_BlockErase64k        = 0xD8,      // Очистить блок разрмером 64Кб
	_25Q64FV_CMD_ChipErase            = 0xC7,      // Полная очистка микросхемы
	_25Q64FV_CMD_ReadData             = 0x03,      // Чтение данных
	_25Q64FV_CMD_FastRead             = 0x0B,      // Чтение данных на повышенной частоте (см. даташит) 
	_25Q64FV_CMD_ManufacturerDeviceID = 0x90,      // Чтение ID производителя и микросхемы	
	_25Q64FV_CMD_EnableReset          = 0x66,      // Разрешение команды сброса
	_25Q64FV_CMD_Reset                = 0x99       // Перезапуск микросхемы
};


 
/**************************************************************************************************************
    SPI_25Q64FV_RetargetPins - Назначение пинов для работы с внещней памятью 25Q64FV по SPI       	    
    Параметры:  NONE
**************************************************************************************************************/
void SPI_25Q64FV_RetargetPins (void);

 
/**************************************************************************************************************
    SPI_25Q64FV_Init - Инициализация SSP в режиме SPI для работы с внешней памятью 25Q64FV
    Параметры:  NONE
**************************************************************************************************************/
void SPI_25Q64FV_Init (void);


/**************************************************************************************************************
    SPI_25Q64FV_WriteEnable - Отправить запрос на разрешение записи во внешнюю SPI-память
    Параметры:
                CSn - Выбор микросхемы
**************************************************************************************************************/
void SPI_25Q64FV_WriteEnable (uint32_t CSn);
 
 
/**************************************************************************************************************
    SPI_25Q64FV_WriteDisable - Отправить запрос на запрет записи во внешнюю SPI-память
    Параметры:
                CSn - Выбор микросхемы
**************************************************************************************************************/
void SPI_25Q64FV_WriteDisable (uint32_t CSn);


/**************************************************************************************************************
    SPI_25Q64FV_ChipErase - Очистка всей микросхемы внешней SPI-памяти
    Параметры:
                CSn - Выбор микросхемы
**************************************************************************************************************/
void SPI_25Q64FV_ChipErase (uint32_t CSn);


/**************************************************************************************************************
    SPI_25Q64FV_Reset - Перезапуск микросхемы внешней SPI-памяти
    Параметры:
                CSn - Выбор микросхемы
**************************************************************************************************************/
void SPI_25Q64FV_Reset (uint32_t CSn);


/**************************************************************************************************************
    SPI_25Q64FV_ReadID - Запрос ID микросхемы и производителя внешней SPI-памяти
    Параметры:
                CSn - Выбор микросхемы
    Возвращает: Два байта, где младший код производителя 0x01,
                а старший код микросхемы 0xC8
**************************************************************************************************************/
uint16_t SPI_25Q64FV_ReadID (uint32_t CSn);


/**************************************************************************************************************
    SPI_25Q64FV_WriteBlock - Внутреняя функция отправки сообщений по SPI
    Параметры:
                Source      - Указатель на буфер источника;
                Destination - Указатель на буфер места назначения;
                Size        - Размер передаваемомой посылки в байтах
    Возвращает: NONE
**************************************************************************************************************/
void static SPI_25Q64FV_WriteBlock (uint8_t* Source, uint8_t* Destination, uint32_t Size);


/**************************************************************************************************************
    SPI_25Q64FV_SectorErase - Стирание сектора внешней SPI-памяти (всего их 2)
    Параметры:
                CSn - Выбор микросхемы
                Address -  Адрес, который однозначно принадлежит стираемому сектору;
    Возвращает: 
                NONE
**************************************************************************************************************/
void SPI_25Q64FV_SectorErase (uint32_t CSn, uint32_t Address);



/**************************************************************************************************************
    SPI_25Q64FV_ByteProgram - Запись байта во внешнюю память
    Параметры:
                CSn     - Выбор микросхемы;
                Address - Адрес места записи;
                Value   - Значение записываемого байта информации;
    Возвращает:
	            NONE;
**************************************************************************************************************/
void SPI_25Q64FV_ByteProgram (uint32_t CSn, uint32_t Address, uint8_t Value);



/**************************************************************************************************************
    SPI_25Q64FV_ReadArray - Чтение массива данных из внешней SPI-памяти
    Параметры:
                CSn         - Выбор микросхемы;
                Address     - Адрес места чтения;
                Destination - Указатель на буфер места назначения;
                Size        - Размер читаемой области памяти в байтах;
    Возвращает:
                Количество считанных байт;
**************************************************************************************************************/
uint32_t SPI_25Q64FV_ReadArray (uint32_t CSn, uint32_t Address, uint8_t* Destination, uint32_t Size);


/**************************************************************************************************************
    SPI_25Q64FV_TestMemory - Функция тестирования микросхемы памяти. Проиводит запись и чтение
                                по всем доступным адресам
    Параметры:
                CSn - Выбор микросхемы
    Возвращает:
                Значение регистра статуса микросхемы;
**************************************************************************************************************/
uint8_t SPI_25Q64FV_TestMemory (uint32_t CSn); 
 
 
#endif 
